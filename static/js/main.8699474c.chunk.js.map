{"version":3,"sources":["components/Header/Header.js","components/Header/Header-styles.js","components/App/App-styles.js","components/StyleComponents/Button.js","components/Settings/Settings.js","components/Settings/Settings-styles.js","components/TimeDisplay/TimeDisplay.js","components/TimeDisplay/TimeDisplay-styles.js","components/NavButtons/NavButtons.js","components/NavButtons/NavButtons-styles.js","components/Display/Display.js","components/Display/Display-styles.js","components/App/App.js","serviceWorker.js","index.js"],"names":["withStyles","headerContainer","marginTop","& h1","color","fontSize","props","classes","react_default","a","createElement","className","AppStyles","app","margin","padding","backgroundColor","height","textAlign","overflow","root","background","borderRadius","border","boxShadow","children","other","Object","objectWithoutProperties","Button_default","assign","classNames","SettingsComponent","state","timerMinutes","timerSeconds","breakMinutes","breakSeconds","handleChange","inputType","event","_this","setState","defineProperty","target","value","handleSetSettings","_this2","this","settings","settingsContainer","TextField_default","input","id","variant","defaultValue","onChange","type","inputProps","maxLength","style","StyleComponents_Button","setButton","onClick","Component","Settings","width","& h2","display","justifyContent","& input","TimeDisplayer","leadingZero","number","slice","_this$props","isBreak","minutes","seconds","breakStyle","concat","timeValue","break","noBreakStyle","timerDisplay","TimeDisplay","flexDirection","& p","fontFamily","opacity","textShadow","NavButtonsComponent","handleStart","timeRunning","handlePause","handleSetDefault","main","NavButtons","Display","initialTime","interval","switchInterval","handleInterval","setInterval","parseInt","handleFinish","clearInterval","handleSwitchBreak","handleResetTime","setTimeout","alert","Settings_Settings","NavButtons_NavButtons","TimeDisplay_TimeDisplay","App","components_Header_Header","components_Display_Display","Boolean","window","location","hostname","match","ReactDOM","render","components_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8699474c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { HeaderStyles } from './Header-styles';\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\n\r\nconst Header = (props) => {\r\n\r\n  const { classes } = props\r\n\r\n  return(\r\n    <div className={classes.headerContainer}>\r\n      <h1>Timer App</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withStyles(HeaderStyles)(Header)","export const HeaderStyles = {\r\n  headerContainer: {\r\n    marginTop: '1rem',\r\n    '& h1': {\r\n      color: '#253d50',\r\n      fontSize: '3rem'\r\n    }\r\n  },\r\n\r\n}","const mainBackground = '#84A1BE';\r\n\r\nexport const AppStyles = {\r\n  app: {\r\n    margin: '0',\r\n    padding: '0',\r\n    backgroundColor: mainBackground,\r\n    height: '100vh',\r\n    textAlign: 'center',\r\n    overflow: 'auto'\r\n  }\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst styles = {\r\n  root: {\r\n    background: '#846C5B',\r\n    borderRadius: 3,\r\n    border: 0,\r\n    color: 'white',\r\n    height: 48,\r\n    boxShadow: '0 3px 2px 2px rgba(162, 149, 135, .3)',\r\n    margin: '5px 2px',\r\n  },\r\n};\r\n\r\nfunction ClassNames(props) {\r\n  const { classes, children, className, ...other } = props;\r\n\r\n  return (\r\n    <Button className={classNames(classes.root, className)} {...other}>\r\n      {children || 'class names'}\r\n    </Button>\r\n  );\r\n}\r\n\r\nClassNames.propTypes = {\r\n  children: PropTypes.node,\r\n  classes: PropTypes.object.isRequired,\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default withStyles(styles)(ClassNames);","import React, { Component } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport withStyles, { WithStyles } from \"@material-ui/core/styles/withStyles\";\r\nimport { SettingsStyles } from './Settings-styles';\r\nimport ActionButton from '../StyleComponents/Button'\r\n\r\nclass SettingsComponent extends Component {\r\n\r\n  state = {\r\n    timerMinutes: '25',\r\n    timerSeconds: '0',\r\n    breakMinutes: '5',\r\n    breakSeconds: '0',\r\n  }\r\n\r\n  get classes() {\r\n    return this.props.classes\r\n  }\r\n\r\n  handleChange = inputType => event => {\r\n    this.setState({[inputType] : event.target.value})\r\n  }\r\n\r\n  handleSetSettings = (timerMinutes, timerSeconds, breakMinutes, breakSeconds) => {\r\n    this.props.handleSetSettings(timerMinutes, timerSeconds, breakMinutes, breakSeconds)\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div className={this.classes.settings}>\r\n        <h2>Set Pomodoro time</h2>\r\n        <div className={this.classes.settingsContainer}>\r\n          <div>\r\n          <p>Minutes</p>\r\n          <TextField\r\n            className={this.classes.input}\r\n            id=\"filled-uncontrolled\"\r\n            margin=\"normal\"\r\n            variant=\"filled\"\r\n            defaultValue={this.state.timerMinutes}\r\n            onChange={this.handleChange('timerMinutes')}\r\n            type=\"text\"\r\n            inputProps={{\r\n              maxLength: 2,\r\n              style: { textAlign: 'center' }\r\n            }}\r\n          />\r\n          </div>\r\n          <div>\r\n          <p>Seconds</p>\r\n          <TextField\r\n            className={this.classes.input}\r\n            id=\"filled-uncontrolled\"\r\n            margin=\"normal\"\r\n            variant=\"filled\"\r\n            defaultValue={this.state.timerSeconds}\r\n            onChange={this.handleChange('timerSeconds')}\r\n            type=\"text\"\r\n            inputProps={{\r\n              maxLength: 2,\r\n              style: { textAlign: 'center' }\r\n            }}\r\n          />\r\n          </div>\r\n        </div>\r\n        <h2>Set break time</h2>\r\n        <div className={this.classes.settingsContainer}>\r\n          <div>\r\n            <p>Minutes</p>\r\n            <TextField\r\n              className={this.classes.input}\r\n              id=\"filled-uncontrolled\"\r\n              margin=\"normal\"\r\n              variant=\"filled\"\r\n              defaultValue={this.state.breakMinutes}\r\n              onChange={this.handleChange('breakMinutes')}\r\n              type=\"text\"\r\n              inputProps={{\r\n                maxLength: 2,\r\n                style: { textAlign: 'center' }\r\n              }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <p>Seconds</p>\r\n            <TextField\r\n              className={this.classes.input}\r\n              id=\"filled-uncontrolled\"\r\n              margin=\"normal\"\r\n              variant=\"filled\"\r\n              defaultValue={this.state.breakSeconds}\r\n              onChange={this.handleChange('breakSeconds')}\r\n              type=\"text\"\r\n              inputProps={{\r\n                maxLength: 2,\r\n                style: { textAlign: 'center' }\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <ActionButton\r\n            className={this.classes.setButton}\r\n            onClick={() => this.handleSetSettings(this.state.timerMinutes, this.state.timerSeconds, this.state.breakMinutes, this.state.breakSeconds)}\r\n          >\r\n            Set\r\n            </ActionButton>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport const Settings = withStyles(SettingsStyles)(SettingsComponent)\r\nexport default Settings","export const SettingsStyles = {\r\n  settings: {\r\n    width: '50%',\r\n    margin: '0 auto',\r\n    '& h2': {\r\n      fontSize: '1rem'\r\n    }\r\n  },\r\n  settingsContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  input: {\r\n    width: '80%',\r\n    height: '3rem',\r\n    '& input': {\r\n      fontSize: '1.5rem',\r\n    }\r\n  },\r\n  setButton: {\r\n    margin: '1rem',\r\n    width: '30%',\r\n    backgroundColor: '#cca222'\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport { TimeDisplayStyles } from './TimeDisplay-styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass TimeDisplayer extends Component {\r\n\r\n  leadingZero = (number) => {\r\n    if (number > 9) {\r\n      return number\r\n    } else if (!number) {\r\n      return '00'\r\n    } else {\r\n      return ('0' + number).slice(-2)\r\n    }\r\n  }\r\n\r\n  get classes() {\r\n    return this.props.classes\r\n  }\r\n\r\n  render() {\r\n    const { isBreak, minutes, seconds, breakMinutes, breakSeconds } = this.props\r\n    const breakStyle = `${this.classes.timeValue} ${this.classes.break}`\r\n    const noBreakStyle = this.classes.timeValue\r\n    return (\r\n      <div className={this.classes.timerDisplay}>\r\n        <p className={isBreak ? breakStyle : noBreakStyle}>{this.leadingZero(minutes)} : {seconds === '60' ? '00' : this.leadingZero(seconds)}</p>\r\n        <p className={isBreak ? noBreakStyle : breakStyle}>{this.leadingZero(breakMinutes)} : {breakSeconds === '60' ? '00' : this.leadingZero(breakSeconds)}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport const TimeDisplay = withStyles(TimeDisplayStyles)(TimeDisplayer)\r\nexport default TimeDisplay","export const TimeDisplayStyles = {\r\n  timerDisplay: {\r\n    margin: '2rem auto',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    '& p': {\r\n      backgroundColor: '#bcbab8',\r\n      padding: '1rem',\r\n      borderRadius: '15px'\r\n    }\r\n  },\r\n  timeValue: {\r\n    margin: '1rem auto',\r\n    fontSize: '3rem',\r\n    fontFamily: \"'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans - serif\",\r\n  },\r\n  break: {\r\n    opacity: '0.1',\r\n    textShadow: 'none'\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport ActionButton from '../StyleComponents/Button';\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport { NavButtonsStyles } from './NavButtons-styles'\r\n\r\nclass NavButtonsComponent extends Component {\r\n\r\n  get classes() {\r\n    return this.props.classes\r\n  }\r\n\r\n  handleStart = () => {\r\n    return this.props.timeRunning ? null : this.props.handleStart();\r\n  }\r\n\r\n  handlePause = () => {\r\n    this.props.handlePause();\r\n  }\r\n\r\n  handleSetDefault = () => {\r\n    this.props.handleSetDefault();\r\n  }\r\n\r\n    render() {\r\n      return(\r\n        <div className={this.classes.main}>\r\n          <ActionButton\r\n            onClick={this.handleStart}\r\n          >\r\n            Start!\r\n          </ActionButton>\r\n          <ActionButton\r\n            onClick={this.handlePause}\r\n          >\r\n            Pause\r\n          </ActionButton>\r\n          <ActionButton\r\n            onClick={this.handleSetDefault}\r\n          >\r\n            Default Pomodoro\r\n          </ActionButton>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\nexport const NavButtons = withStyles(NavButtonsStyles)(NavButtonsComponent)\r\nexport default NavButtons\r\n","export const NavButtonsStyles = {\r\n  main: {\r\n    margin: '1rem'\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport Settings from '../Settings/Settings';\r\nimport TimeDisplay from '../TimeDisplay/TimeDisplay'\r\nimport NavButtons from '../NavButtons/NavButtons';\r\nimport { DisplayStyles } from './Display-styles';\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\n\r\nclass Display extends Component {\r\n\r\n  state = {\r\n    minutes: '25',\r\n    seconds: '0',\r\n    breakMinutes: '5',\r\n    breakSeconds: '0',\r\n    initialTime: {\r\n      minutes: '25',\r\n      seconds: '0',\r\n      breakMinutes: '5',\r\n      breakSeconds: '0'\r\n    },\r\n    interval: false,\r\n    isBreak: false\r\n  }\r\n\r\n  handleStart = () => {\r\n    this.switchInterval()\r\n    this.handleInterval()\r\n  }\r\n\r\n  handleInterval = () => {\r\n    this.interval = setInterval(() => {\r\n      if (!this.state.isBreak) {\r\n        let minutes = parseInt(this.state.minutes)\r\n        let seconds = parseInt(this.state.seconds)\r\n        this.setState({\r\n          minutes: seconds === 0 ? minutes - 1 : minutes,\r\n          seconds: seconds !== 0 ? seconds - 1 : 59,\r\n        })\r\n      } else {\r\n        let minutes = parseInt(this.state.breakMinutes)\r\n        let seconds = parseInt(this.state.breakSeconds)\r\n        this.setState({\r\n          breakMinutes: seconds === 0 ? minutes - 1 : minutes,\r\n          breakSeconds: seconds !== 0 ? seconds - 1 : 59,\r\n        })\r\n      }\r\n      this.handleFinish()\r\n    }, 1000)\r\n  }\r\n\r\n  handleFinish = () => {\r\n    if (!this.state.isBreak) { \r\n      if (!this.state.seconds && !this.state.minutes) {\r\n        clearInterval(this.interval)\r\n        this.handleSwitchBreak();\r\n        this.switchInterval()\r\n        setTimeout(() => alert('Finished!'), 0)\r\n      }\r\n    } else {\r\n      if (!this.state.breakSeconds && !this.state.breakMinutes) {\r\n        clearInterval(this.interval)\r\n        this.handleSwitchBreak();\r\n        this.switchInterval()\r\n        this.handleResetTime()\r\n        setTimeout(() => alert('Finished!'), 0)\r\n      }\r\n    }\r\n  }\r\n\r\n  handleResetTime = () => {\r\n    this.setState({\r\n      minutes: this.state.initialTime.minutes,\r\n      seconds: this.state.initialTime.seconds,\r\n      breakMinutes: this.state.initialTime.breakMinutes,\r\n      breakSeconds: this.state.initialTime.breakSeconds,\r\n    })\r\n  }\r\n\r\n  handleSwitchBreak = () => {\r\n    this.setState({\r\n      isBreak: !this.state.isBreak\r\n    })\r\n  }\r\n\r\n  switchInterval = () => {\r\n    this.setState({\r\n      interval: !this.state.interval\r\n    })\r\n  }\r\n\r\n  handlePause = () => {\r\n    this.switchInterval()\r\n    clearInterval(this.interval)\r\n  }\r\n\r\n  handleSetSettings = (minutes, seconds, breakMinutes, breakSeconds) => {\r\n    this.setState({\r\n      minutes,\r\n      seconds,\r\n      breakMinutes,\r\n      breakSeconds,\r\n      interval: false,\r\n      initialTime: {\r\n        minutes,\r\n        seconds,\r\n        breakMinutes,\r\n        breakSeconds\r\n      }\r\n    })\r\n    clearInterval(this.interval)\r\n  }\r\n\r\n  handleSetDefault = () => {\r\n    this.setState({\r\n      minutes: '25',\r\n      seconds: '0',\r\n      breakMinutes: '5',\r\n      breakSeconds: '0'\r\n    })\r\n  }\r\n\r\n  get classes() {\r\n    return this.props.classes\r\n  }\r\n\r\n  render() {\r\n    const timeRunning = this.state.interval\r\n    return(\r\n      <div className={this.classes.main}>\r\n        <Settings \r\n          handleSetSettings={this.handleSetSettings}\r\n          handleSetDefault={this.handleSetDefault}\r\n        />\r\n        <NavButtons \r\n          handleStart = {this.handleStart}\r\n          handlePause = {this.handlePause}\r\n          handleSetDefault = {this.handleSetDefault}\r\n          timeRunning={timeRunning}\r\n        />\r\n        <TimeDisplay\r\n          minutes={this.state.minutes}\r\n          seconds={this.state.seconds}\r\n          breakMinutes={this.state.breakMinutes}\r\n          breakSeconds={this.state.breakSeconds}\r\n          isBreak={this.state.isBreak}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(DisplayStyles)(Display)\r\n","export const DisplayStyles = {\r\n  main: {\r\n    margin: '0 auto',\r\n    width: '75%'\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport Header from '../Header/Header'\r\nimport { AppStyles } from './App-styles';\r\nimport Display from '../Display/Display';\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\n\r\nclass App extends Component {\r\n\r\n  get classes() {\r\n    return this.props.classes\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.classes.app}>\r\n        <Header />\r\n        <Display />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(AppStyles)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'normalize.css';\r\nimport './index.css';\r\nimport App from './components/App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}